
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a.out is a Catch v2.13.3 host application.
Run with -? for options

-------------------------------------------------------------------------------
Caso ER
-------------------------------------------------------------------------------
arvore.cpp:62
...............................................................................

arvore.cpp:69: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 1, 2, 3 } == { 2, 1, 3 }

-------------------------------------------------------------------------------
Caso DR
-------------------------------------------------------------------------------
arvore.cpp:73
...............................................................................

arvore.cpp:80: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 3, 2, 1 } == { 2, 1, 3 }

-------------------------------------------------------------------------------
Caso DR-ER
-------------------------------------------------------------------------------
arvore.cpp:84
...............................................................................

arvore.cpp:91: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 5, 10, 7 } == { 7, 5, 10 }

-------------------------------------------------------------------------------
Caso ER-DR
-------------------------------------------------------------------------------
arvore.cpp:95
...............................................................................

arvore.cpp:102: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 5, 1, 3 } == { 3, 1, 5 }

-------------------------------------------------------------------------------
Caso DEL 1
-------------------------------------------------------------------------------
arvore.cpp:115
...............................................................................

arvore.cpp:123: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 4, 6, 7 } == { 6, 4, 7 }

-------------------------------------------------------------------------------
Caso simples sequencial
-------------------------------------------------------------------------------
arvore.cpp:127
...............................................................................

arvore.cpp:134: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 1, 2, 3, 4, 5, 6, 7 }
  ==
  { 4, 2, 1, 3, 6, 5, 7 }

-------------------------------------------------------------------------------
Caso Notas MIT 2008
-------------------------------------------------------------------------------
arvore.cpp:138
...............................................................................

arvore.cpp:145: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 41, 20, 11, 29, 26, 23, 65, 50, 55 }
  ==
  { 41, 20, 11, 26, 23, 29, 55, 50, 65 }

-------------------------------------------------------------------------------
Caso N
-------------------------------------------------------------------------------
arvore.cpp:149
...............................................................................

arvore.cpp:158: FAILED:
  REQUIRE( saida == resultado )
with expansion:
  { 50, 30, 24, 5, 28, 52, 60 }
  ==
  { 30, 24, 5, 28, 52, 50, 60 }

===============================================================================
test cases: 12 | 4 passed | 8 failed
assertions: 12 | 4 passed | 8 failed


ERRORS:
